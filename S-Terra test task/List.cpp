//#include "List.h"
//#include <iostream>
//#include <stdlib.h>
//
//using namespace std;
//
//List::~List()                           //Деструктор
//{
//    while (Head)                       //Пока по адресу на начало списка что-то есть
//    {
//        Tail = Head->Next;             //Резервная копия адреса следующего звена списка
//        delete Head;                   //Очистка памяти от первого звена
//        Head = Tail;                   //Смена адреса начала на адрес следующего элемента
//    }
//}
//
//void List::AddRandom()
//{
//    Node* temp = new Node;               //Выделение памяти под новый элемент структуры
//    temp->Next = NULL;                   //Указываем, что изначально по следующему адресу пусто
//    temp->x = rand() % 2;                         //Записываем значение в структуру
//
//    if (Head != NULL)                    //Если список не пуст
//    {
//        temp->Prev = Tail;               //Указываем адрес на предыдущий элемент в соотв. поле
//        Tail->Next = temp;               //Указываем адрес следующего за хвостом элемента
//        Tail = temp;                     //Меняем адрес хвоста
//    }
//    else //Если список пустой
//    {
//        temp->Prev = NULL;               //Предыдущий элемент указывает в пустоту
//        Head = Tail = temp;              //Голова=Хвост=тот элемент, что сейчас добавили
//    }
//}
//
//void List::Print()
//{
//    ////ВЫВОДИМ СПИСОК С КОНЦА
//    Node* temp = Tail;                   //Временный указатель на адрес последнего элемента
//
//    //while (temp != NULL)               //Пока не встретится пустое значение
//    //{
//    //    cout << temp->x << " ";        //Выводить значение на экран
//    //    temp = temp->Prev;             //Указываем, что нужен адрес предыдущего элемента
//    //}
//    //cout << "\n";
//
//    //ВЫВОДИМ СПИСОК С НАЧАЛА
//
//    temp = Head;                       //Временно указываем на адрес первого элемента
//
//    while (temp != NULL)              //Пока не встретим пустое значение
//    {
//        cout << temp->x << " ";        //Выводим каждое считанное значение на экран
//        temp = temp->Next;             //Смена адреса на адрес следующего элемента
//    }
//    cout << "\n";
//}